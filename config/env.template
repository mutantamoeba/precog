# Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git - only .env.template

# ============================================================================
# PHASE 1-2: CORE INFRASTRUCTURE & LIVE DATA
# ============================================================================

# PostgreSQL Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=precog_db
DB_USER=your_db_user
DB_PASSWORD=your_db_password

# Kalshi API Credentials (Phase 1)
# Get from: https://kalshi.com/
KALSHI_API_KEY=your_kalshi_api_key_here
KALSHI_API_SECRET=your_kalshi_api_secret_here
KALSHI_BASE_URL=https://demo-api.kalshi.co  # Use demo for testing
# KALSHI_BASE_URL=https://trading-api.kalshi.com  # Production URL

# ESPN API (Phase 2)
# Public API - no key required for most endpoints
ESPN_API_BASE=https://site.api.espn.com/apis/site/v2

# ============================================================================
# PHASE 6: MULTI-SPORT EXPANSION
# ============================================================================

# BallDontLie API (NBA Data - Phase 6)
# Get from: https://www.balldontlie.io/
BALLDONTLIE_API_KEY=your_balldontlie_api_key_here
BALLDONTLIE_BASE_URL=https://api.balldontlie.io/v1

# MLB Data Source (Phase 6)
# ESPN MLB API or alternative (TBD Phase 6)
MLB_DATA_SOURCE=espn  # or other source determined in Phase 6

# Tennis Data Source (Phase 6)
# ATP/WTA API (TBD Phase 6 - research required)
TENNIS_API_KEY=your_tennis_api_key_here
TENNIS_API_BASE=https://api.tennisdata.com  # Placeholder URL

# UFC Data (Phase 6 - Optional)
# ESPN UFC API (public, likely no key needed)
UFC_DATA_SOURCE=espn

# ============================================================================
# PHASE 8: NON-SPORTS MARKETS
# ============================================================================

# RealClearPolling API (Political Markets - Phase 8)
# Get from: https://www.realclearpolitics.com/
RCP_API_KEY=your_rcp_api_key_here
RCP_API_BASE=https://api.realclearpolitics.com  # Placeholder URL

# FiveThirtyEight API (Political Markets - Phase 8)
# Get from: https://fivethirtyeight.com/
FIVETHIRTYEIGHT_API_KEY=your_538_api_key_here
FIVETHIRTYEIGHT_API_BASE=https://api.fivethirtyeight.com  # Placeholder URL

# Box Office Mojo API (Entertainment Markets - Phase 8)
# Get from: https://www.boxofficemojo.com/
BOXOFFICE_API_KEY=your_boxoffice_api_key_here
BOXOFFICE_API_BASE=https://api.boxofficemojo.com  # Placeholder URL

# Twitter API (Sentiment Analysis - Phase 8)
# Get from: https://developer.twitter.com/
TWITTER_API_KEY=your_twitter_api_key_here
TWITTER_API_SECRET=your_twitter_api_secret_here
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here

# News API (Sentiment Analysis - Phase 8)
# Get from: https://newsapi.org/
NEWS_API_KEY=your_news_api_key_here
NEWS_API_BASE=https://newsapi.org/v2

# ============================================================================
# PHASE 10: MULTI-PLATFORM
# ============================================================================

# Polymarket API (Phase 10)
# Get from: https://polymarket.com/
POLYMARKET_API_KEY=your_polymarket_api_key_here
POLYMARKET_PRIVATE_KEY=your_polymarket_private_key_here  # For Web3 transactions
POLYMARKET_CLOB_BASE=https://clob.polymarket.com
POLYMARKET_GAMMA_BASE=https://gamma-api.polymarket.com

# Ethereum RPC (for Polymarket - Phase 10)
# Get from: https://infura.io/ or https://alchemy.com/
ETH_RPC_URL=https://mainnet.infura.io/v3/your_project_id
ETH_CHAIN_ID=137  # Polygon mainnet for Polymarket

# ============================================================================
# PHASE 7: WEB DASHBOARD (OPTIONAL)
# ============================================================================

# JWT Secret for Dashboard Authentication
JWT_SECRET=your_random_jwt_secret_here_min_32_chars

# Dashboard Configuration
DASHBOARD_BASE_URL=http://localhost:3000  # Frontend URL
API_BASE_URL=http://localhost:8000  # Backend API URL

# Email Notifications (Optional - for alerts)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_specific_password
ALERT_EMAIL=your_alert_email@gmail.com

# ============================================================================
# SYSTEM CONFIGURATION
# ============================================================================

# Environment Mode
ENVIRONMENT=development  # Options: development, staging, production

# Logging Configuration
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE_PATH=/var/log/precog/precog.log
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Application Settings
APP_NAME=Precog
APP_VERSION=0.1.0
DEBUG_MODE=True  # Set to False in production

# Rate Limiting
API_RATE_LIMIT=100  # Requests per minute (Kalshi default)
RATE_LIMIT_BACKOFF=exponential  # Options: exponential, linear

# Circuit Breaker Settings
CIRCUIT_BREAKER_ENABLED=True
MAX_API_FAILURES=5  # Consecutive failures before circuit opens
CIRCUIT_RESET_TIMEOUT=300  # Seconds (5 minutes)

# Position Limits (Risk Management)
MAX_POSITION_SIZE=1000  # Dollars per position (conservative start)
MAX_TOTAL_EXPOSURE=10000  # Dollars across all positions
DAILY_LOSS_LIMIT=500  # Dollars (circuit breaker)

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Test Database (Separate from production)
TEST_DB_NAME=precog_test_db
TEST_DB_USER=test_user
TEST_DB_PASSWORD=test_password

# Mock API Mode (for testing without real APIs)
MOCK_API_MODE=False  # Set True to use mock responses

# Paper Trading Mode
PAPER_TRADING_MODE=True  # Start with paper trading!
PAPER_TRADING_BALANCE=10000  # Starting balance for paper trading

# Pytest Configuration
PYTEST_COVERAGE_MIN=80  # Minimum test coverage percentage

# ============================================================================
# NOTES FOR DEVELOPERS
# ============================================================================

# 1. NEVER commit .env file with actual credentials
# 2. Use .env.template for sharing structure
# 3. Keep sensitive values in .env (gitignored)
# 4. Use strong, unique passwords for all services
# 5. Rotate API keys periodically (quarterly recommended)
# 6. Use demo/sandbox environments for testing
# 7. Paper trading MUST be verified before live trading
# 8. Monitor API rate limits to avoid throttling
# 9. Phase-specific keys can remain empty until that phase starts
# 10. See ENVIRONMENT_CHECKLIST_V1.1.md for setup instructions

# ============================================================================
# END OF TEMPLATE
# ============================================================================

# Quick Start:
# 1. Copy this file: cp .env.template .env
# 2. Edit .env with your actual API keys
# 3. Never commit .env to git
# 4. Keep this template updated when adding new services
